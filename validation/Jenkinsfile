#!groovy
node {
    library 'qa-jenkins-library'

    def path = 'go/src/github.com/rancher/tests'

    def workspace

    def testContainer

    property.useWithProperties(['AWS_SSH_PEM_KEY', 'AWS_SSH_PEM_KEY_NAME', 'AWS_SSH_RSA_KEY',  'AWS_SSH_RSA_KEY_NAME', 'CONFIG_NAME']) {
        stage('Checkout') {
            workspace = project.checkout(target: path, branch: env.BRANCH, repository: env.REPO)
        }

        dir(workspace) {
                stage('Prepare Credentials') {
                    container.prepare(workspace: workspace, dir: 'validation')
                }
                stage('Configure and Build Container') {
                    container.build(dir: 'validation', buildScript: 'build.sh', configureScript: 'configure.sh')
                }
                stage('Run Tests') {
                    def names = generate.names()

                    def runParams = [
                            container: [ workspace: workspace, dir: 'validation', name: names.container, image: names.image],
                            test:      [ params: [ packages: "github.com/rancher/tests/validation/${env.TEST_PACKAGE}", cases: env.GOTEST_TESTCASE, tags: env.TAGS ]]
                        ]

                    testContainer = container.run(runParams)
                }

                stage('Report Result') {
                    result.reportFromContainer(workspace: workspace, name: testContainer.container.name, image: testContainer.container.image, dir: 'validation', resultsXML: testContainer.test.resultsXML)
                }
                stage('Remove container') {
                    container.remove([ [name: testContainer.container.name, image: testContainer.container.image] ])
                }
        }
    }
} // node

